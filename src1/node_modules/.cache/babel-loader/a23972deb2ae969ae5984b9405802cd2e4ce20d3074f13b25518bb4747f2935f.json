{"ast":null,"code":"var _jsxFileName = \"D:\\\\MCQ_Gen\\\\frontend\\\\src1\\\\src\\\\Badge.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Badge = ({\n  name = \"User\",\n  score = 0,\n  totalQuestions = 0\n}) => {\n  const getBadgeInfo = () => {\n    if (totalQuestions >= 25 && score >= 20) {\n      return {\n        type: \"gold\",\n        gradient: \"url(#goldGradient)\",\n        achievement: \"Gold Achievement\"\n      };\n    } else if (totalQuestions >= 15 && score >= 10) {\n      return {\n        type: \"silver\",\n        gradient: \"url(#silverGradient)\",\n        achievement: \"Silver Achievement\"\n      };\n    }\n    return null;\n  };\n  const generateBadgeSvg = badgeInfo => `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 300 400\" aria-label=\"Achievement Badge\">\n      <defs>\n        <linearGradient id=\"silverGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style=\"stop-color:#C0C0C0\" />\n          <stop offset=\"50%\" style=\"stop-color:#E8E8E8\" />\n          <stop offset=\"100%\" style=\"stop-color:#B0B0B0\" />\n        </linearGradient>\n        <linearGradient id=\"goldGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style=\"stop-color:#FFD700\" />\n          <stop offset=\"50%\" style=\"stop-color:#FFED4A\" />\n          <stop offset=\"100%\" style=\"stop-color:#DAA520\" />\n        </linearGradient>\n      </defs>\n      <circle cx=\"150\" cy=\"200\" r=\"120\" fill=\"${badgeInfo.gradient}\" stroke=\"#2c3e50\" stroke-width=\"8\" />\n      <circle cx=\"150\" cy=\"200\" r=\"100\" fill=\"none\" stroke=\"#2c3e50\" stroke-width=\"4\" />\n      <path d=\"M150 80 L130 40 L170 40 Z\" fill=\"#FFD700\" stroke=\"#2c3e50\" stroke-width=\"4\" />\n      <text x=\"150\" y=\"180\" text-anchor=\"middle\" font-size=\"24\" font-family=\"Arial, sans-serif\" fill=\"#2c3e50\">${name}</text>\n      <text x=\"150\" y=\"220\" text-anchor=\"middle\" font-size=\"20\" font-family=\"Arial, sans-serif\" fill=\"#2c3e50\">${badgeInfo.achievement}</text>\n      <text x=\"150\" y=\"250\" text-anchor=\"middle\" font-size=\"16\" font-family=\"Arial, sans-serif\" fill=\"#2c3e50\">Score: ${score}/${totalQuestions}</text>\n    </svg>\n  `;\n  const downloadBadge = () => {\n    const badgeInfo = getBadgeInfo();\n    if (!badgeInfo) return;\n    const svgContent = generateBadgeSvg(badgeInfo);\n    const blob = new Blob([svgContent], {\n      type: \"image/svg+xml\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = `${badgeInfo.type}-badge.svg`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n  const badgeInfo = getBadgeInfo();\n  if (!badgeInfo) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8\",\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-bold text-gray-500\",\n      children: \"Keep going! Earn a badge by improving your score.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: [\"Congratulations! You've earned a \", badgeInfo.type, \" badge!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-64 h-64 mx-auto mb-4\",\n      dangerouslySetInnerHTML: {\n        __html: generateBadgeSvg(badgeInfo)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadBadge,\n      className: \"bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600 transition duration-300\",\n      children: \"Download Badge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c = Badge;\nexport default Badge;\nvar _c;\n$RefreshReg$(_c, \"Badge\");","map":{"version":3,"names":["Badge","name","score","totalQuestions","getBadgeInfo","type","gradient","achievement","generateBadgeSvg","badgeInfo","downloadBadge","svgContent","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","onClick","_c","$RefreshReg$"],"sources":["D:/MCQ_Gen/frontend/src1/src/Badge.js"],"sourcesContent":["const Badge = ({ name = \"User\", score = 0, totalQuestions = 0 }) => {\r\n  const getBadgeInfo = () => {\r\n    if (totalQuestions >= 25 && score >= 20) {\r\n      return {\r\n        type: \"gold\",\r\n        gradient: \"url(#goldGradient)\",\r\n        achievement: \"Gold Achievement\",\r\n      };\r\n    } else if (totalQuestions >= 15 && score >= 10) {\r\n      return {\r\n        type: \"silver\",\r\n        gradient: \"url(#silverGradient)\",\r\n        achievement: \"Silver Achievement\",\r\n      };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const generateBadgeSvg = (badgeInfo) => `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 300 400\" aria-label=\"Achievement Badge\">\r\n      <defs>\r\n        <linearGradient id=\"silverGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n          <stop offset=\"0%\" style=\"stop-color:#C0C0C0\" />\r\n          <stop offset=\"50%\" style=\"stop-color:#E8E8E8\" />\r\n          <stop offset=\"100%\" style=\"stop-color:#B0B0B0\" />\r\n        </linearGradient>\r\n        <linearGradient id=\"goldGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n          <stop offset=\"0%\" style=\"stop-color:#FFD700\" />\r\n          <stop offset=\"50%\" style=\"stop-color:#FFED4A\" />\r\n          <stop offset=\"100%\" style=\"stop-color:#DAA520\" />\r\n        </linearGradient>\r\n      </defs>\r\n      <circle cx=\"150\" cy=\"200\" r=\"120\" fill=\"${badgeInfo.gradient}\" stroke=\"#2c3e50\" stroke-width=\"8\" />\r\n      <circle cx=\"150\" cy=\"200\" r=\"100\" fill=\"none\" stroke=\"#2c3e50\" stroke-width=\"4\" />\r\n      <path d=\"M150 80 L130 40 L170 40 Z\" fill=\"#FFD700\" stroke=\"#2c3e50\" stroke-width=\"4\" />\r\n      <text x=\"150\" y=\"180\" text-anchor=\"middle\" font-size=\"24\" font-family=\"Arial, sans-serif\" fill=\"#2c3e50\">${name}</text>\r\n      <text x=\"150\" y=\"220\" text-anchor=\"middle\" font-size=\"20\" font-family=\"Arial, sans-serif\" fill=\"#2c3e50\">${badgeInfo.achievement}</text>\r\n      <text x=\"150\" y=\"250\" text-anchor=\"middle\" font-size=\"16\" font-family=\"Arial, sans-serif\" fill=\"#2c3e50\">Score: ${score}/${totalQuestions}</text>\r\n    </svg>\r\n  `;\r\n\r\n  const downloadBadge = () => {\r\n    const badgeInfo = getBadgeInfo();\r\n    if (!badgeInfo) return;\r\n\r\n    const svgContent = generateBadgeSvg(badgeInfo);\r\n    const blob = new Blob([svgContent], { type: \"image/svg+xml\" });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.download = `${badgeInfo.type}-badge.svg`;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const badgeInfo = getBadgeInfo();\r\n  if (!badgeInfo)\r\n    return (\r\n      <div className=\"text-center mt-8\">\r\n        <h3 className=\"text-lg font-bold text-gray-500\">\r\n          Keep going! Earn a badge by improving your score.\r\n        </h3>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"mt-8 text-center\">\r\n      <h3 className=\"text-2xl font-bold mb-4\">\r\n        Congratulations! You've earned a {badgeInfo.type} badge!\r\n      </h3>\r\n      <div\r\n        className=\"w-64 h-64 mx-auto mb-4\"\r\n        dangerouslySetInnerHTML={{\r\n          __html: generateBadgeSvg(badgeInfo),\r\n        }}\r\n      />\r\n      <button\r\n        onClick={downloadBadge}\r\n        className=\"bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600 transition duration-300\"\r\n      >\r\n        Download Badge\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}